name: Python package

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install Dependencies
        run: poetry install

      - name: Lint with flake8
        run: poetry run flake8

      - name: Test with Pytest
        run: poetry run pytest

  release:

    needs: build
    if: |
      github.event_name == 'push'
      && github.ref == 'refs/heads/main'
      && !contains(github.event.head_commit.message, 'chore(release): bump version')

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.x" ]
    permissions:
      id-token: write
      contents: write

    steps:

      - name: Generate Token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install Dependencies
        run: poetry install

      - name: Python Semantic Release
        id: semantic_release
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          poetry run semantic-release version
          poetry run semantic-release publish

      - name: Publish to PyPI
        if: steps.semantic_release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
